{
	"info": {
		"title": "API REST Smart Grocery",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"description": ""
	},
	"basePath": "/api/v1",
	"host": "localhost:8080",
	"securityDefinitions": {
		"basicAuth": {
			"type": "basic"
		},
		"bearerAuth": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	},
	"tags": [
		{
			"name": "oauth",
			"description": "OAuth 2.0 connexion"
		},
		{
			"name": "user",
			"description": "Users management"
		},
		{
			"name": "client",
			"description": "Clients management"
		},
		{
			"name": "product",
			"description": "Products management"
		},
		{
			"name": "grid",
			"description": "Grids management"
		},
		{
			"name": "case",
			"description": "Cases management"
		}
	],
	"paths": {
		"/oauth/token": {
			"post": {
				"tags": [
					"oauth"
				],
				"summary": "Get a token for an authenticated user",
				"security": [
					{
						"basicAuth": []
					}
				],
				"parameters": [
					{
						"name": "mail",
						"in": "query",
						"type": "string",
						"description": "User mail",
						"format": "mail",
						"required": true
					},
					{
						"name": "pass",
						"in": "query",
						"type": "string",
						"minLength": 6,
						"maxLength": 30,
						"description": "User password",
						"format": "password",
						"required": true
					},
					{
						"name": "grant_type",
						"in": "query",
						"type": "string",
						"description": "Grant type",
						"enum": [
							"password"
						],
						"required": true
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Tokens generated for the user",
						"schema": {
							"type": "object",
							"properties": {
								"accessToken": {
									"type": "string",
									"description": "Access token"
								},
								"accessTokenExpiresAt": {
									"type": "string",
									"description": "Access token expiration date"
								},
								"refreshToken": {
									"type": "string",
									"description": "Refresh token"
								},
								"refreshTokenExpiresAt": {
									"type": "string",
									"description": "Refresh token expiration date"
								}
							}
						}
					}
				}
			}
		},
		"/user": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Get a list of users",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"type": "string",
						"description": "Users type",
						"enum": [
							"admin",
							"user"
						]
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "List of users",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer",
										"description": "User id"
									},
									"mail": {
										"type": "string",
										"description": "User email",
										"format": "email"
									},
									"type": {
										"type": "string",
										"description": "User type"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "user",
				"consumes": [
					"application/json"
				],
				"parameters": [],
				"responses": {}
			}
		},
		"/user/{id}": {
			"get": {
				"summary": "user/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"put": {
				"summary": "user/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"delete": {
				"tags": [
					"user"
				],
				"summary": "Delete a targeted user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"type": "integer",
						"description": "User ID"
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/client": {
			"get": {
				"tags": [
					"client"
				],
				"summary": "Get a list of clients",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"type": "integer",
						"description": "User ID"
					},
					{
						"name": "type",
						"in": "query",
						"type": "string",
						"description": "Clients type",
						"enum": [
							"public",
							"confidential",
							"web_application",
							"native_application"
						]
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "List of clients",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "Client id"
									},
									"secret": {
										"type": "string",
										"description": "Client secret"
									},
									"type": {
										"type": "string",
										"description": "Client type"
									},
									"user_id": {
										"type": "integer",
										"description": "User id"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "client",
				"consumes": [
					"application/json"
				],
				"parameters": [],
				"responses": {}
			}
		},
		"/client/{id}": {
			"get": {
				"summary": "client/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"put": {
				"summary": "client/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"delete": {
				"tags": [
					"client"
				],
				"summary": "Delete a targeted client",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"type": "integer",
						"description": "Client ID"
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/product": {
			"get": {
				"tags": [
					"product"
				],
				"summary": "Get a list of products",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "List of products",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer",
										"description": "Product id"
									},
									"name": {
										"type": "string",
										"description": "Product name"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "product",
				"consumes": [
					"application/json"
				],
				"parameters": [],
				"responses": {}
			}
		},
		"/product/{id}": {
			"get": {
				"summary": "product/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"put": {
				"summary": "product/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"delete": {
				"tags": [
					"product"
				],
				"summary": "Delete a targeted product",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"type": "integer",
						"description": "Product ID"
					} 
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/grid": {
			"get": {
				"tags": [
					"grid"
				],
				"summary": "Get a list of grids",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "List of grids",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer",
										"description": "Grid id"
									},
									"name": {
										"type": "string",
										"description": "Grid name"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "grid",
				"consumes": [
					"application/json"
				],
				"parameters": [],
				"responses": {}
			}
		},
		"/grid/{id}": {
			"get": {
				"summary": "grid/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"put": {
				"summary": "grid/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"delete": {
				"tags": [
					"grid"
				],
				"summary": "Delete a targeted grid",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"type": "integer",
						"description": "Grid ID"
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/grid/{grid_id}/case": {
			"get": {
				"tags": [
					"case"
				],
				"summary": "Get a list of cases",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "grid_id",
						"in": "path",
						"type": "integer",
						"description": "Grid id of the targeted(s) case(s)"
					},
					{
						"name": "details",
						"in": "query",
						"type": "string",
						"description": "Include product details in response",
						"enum": [
							"true",
							"false"
						]
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "List of cases",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer",
										"description": "Case id"
									},
									"x": {
										"type": "integer",
										"description": "Case x position"
									},
									"y": {
										"type": "string",
										"description": "Case y position"
									},
									"grid_id": {
										"type": "integer",
										"description": "Grid id"
									},
									"item": {
										"type": "integer",
										"description": "Item"
									}
								}
							}
						}
					}
				}
			}
		},
		"/grid/{grid_id}/case/{id}": {
			"get": {
				"summary": "grid/{grid_id}/case/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "grid_id",
						"in": "path",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"put": {
				"summary": "grid/{grid_id}/case/{id}",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "grid_id",
						"in": "path",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {}
			},
			"delete": {
				"tags": [
					"case"
				],
				"summary": "Delete a targeted case",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "grid_id",
						"in": "path",
						"type": "integer",
						"description": "Grid id of the targeted(s) case(s)"
					},
					{
						"name": "id",
						"in": "path",
						"type": "integer",
						"description": "Case ID"
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},
	"swagger": "2.0"
}